#
# Copyright 1999-2005 Sun Microsystems, Inc.  All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Sun designates this
# particular file as subject to the "Classpath" exception as provided
# by Sun in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
# CA 95054 USA or visit www.sun.com if you need additional information or
# have any questions.
#

#
# Build libverify.so
#

BUILDDIR = ../..
PRODUCT = java
LIBRARY = verify
include $(BUILDDIR)/common/Defs.gmk

#
# Link to libjvm so JVM_ functions can be called.
#
OTHER_LDLIBS += $(JVMLIB)

ifeq ($(PLATFORM), windows)
  #
  # Don't want JAVALIB
  #
  JAVALIB = 
  EXTRA_LIBS = 
  # Files built here do not compile with warning level 3 if warnings are fatal
  COMPILER_WARNINGS_FATAL=false
endif

#
# Files to compile.
#
FILES_c = \
	check_code.c \
	check_format.c

#
# libverify.so needs these 2 header files (opcodes.h opcodes.length) 
# from the VM.
#
CPPFLAGS += -I$(SHARE_SRC)/javavm/include 

#
# Targets.
#
ifeq ($(PLATFORM), solaris)
  ifneq ($(ARCH), amd64)
    FILES_reorder += reorder-$(ARCH)
  endif
endif
include $(BUILDDIR)/common/Mapfile-vers.gmk
include $(BUILDDIR)/common/Library.gmk

#
# Add to the ambient VPATH.
#
vpath %.c   $(SHARE_SRC)/native/common

