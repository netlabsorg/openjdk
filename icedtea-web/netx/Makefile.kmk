## @file
#

SUB_DEPTH = ..
include $(KBUILD_PATH)/subheader.kmk

OTHERS += netx
BLDDIRS += $(netx_0_OUTDIR)

BUILD_PROPERTIES = $(netx_0_OUTDIR)/net/sourceforge/jnlp/build.properties
BLDDIRS += $(dir $(BUILD_PROPERTIES))

OTHER_CLEAN += $(BUILD_PROPERTIES) $(netx_0_OUTDIR)/files.txt

$$(BUILD_PROPERTIES): $(PATH_ROOT)/build.properties.in | $$(call DIRDEP,$$(dir $$(@)))
	sed "s/@RHINO_AVAILABLE@/$(if $(WITH_RHINO),true,false)/g" < $^ > $@

netx: $$(BUILD_PROPERTIES) | $$(call DIRDEP,$$(netx_0_OUTDIR))
	find $(PATH_SUB_CURRENT) -name '*.java' | sort > $(netx_0_OUTDIR)/files.txt
ifndef WITH_RHINO
	sed -i '/RhinoBasedPacEvaluator/ d' $(netx_0_OUTDIR)/files.txt
endif
	$(PATH_BOOTSTRAP_JDK)/bin/javac $(IT_JAVACFLAGS) \
        -d "$(netx_0_OUTDIR)" \
        -sourcepath "$(PATH_SUB_CURRENT)" \
        -bootclasspath "$(BOOTSTRAP_JDK_RUNTIME)" \
        @$(netx_0_OUTDIR)/files.txt
	(cd $(PATH_SUB_CURRENT)/net/sourceforge/jnlp/resources; \
        for files in $$(find . -path ./.svn -prune -o -type f -print); \
        do \
            $(INSTALL_DATA) -D $${files} \
            $(netx_0_OUTDIR)/net/sourceforge/jnlp/resources/$${files}; \
        done)
	cp -a $(PATH_SUB_CURRENT)/net/sourceforge/jnlp/runtime/pac-funcs.js \
        $(netx_0_OUTDIR)/net/sourceforge/jnlp/runtime


include $(FILE_KBUILD_SUB_FOOTER)

#$(error --$(PATH_OUT))
