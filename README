OpenJDK 6 for OS/2 and eCS

This document contains information about building the OpenJDK 6 source code on OS/2.

Requirements (draft)

1a. GCC 4.5.2 (ftp://ftp.netlabs.org/pub/qt4/tools/gcc-4_5_2-complete-20110302.zip)
1b. ILINK 5.0 (ftp://ftp.software.ibm.com/ps/products/warpzilla/ilink50.zip)
2.  Odin32 SDK (take from SVN at http://svn.netlabs.org/repos/odin32/trunk,
    configure with configure.cmd --use-oldlib)
3a. OpenJDK 1.6.0 Build 19 RC or later (http://svn.netlabs.org/java/)
3b. JAXB 2.1 (http://jaxb.java.net/2.1/JAXB2_20061211.jar,
    install it with java -jar JAXB2_20061211.jar)
4a. Ant 1.8.1 (http://ant.apache.org/bindownload.cgi)
4b. Patched ant.jar for Ant 1.8.1 (ftp://ftp.netlabs.org/pub/qt4/tmp/ant-1.8.1-patch-os2_cmd_line_length.zip)
5.  Object REXX (can bue turned on system-wide with the standard SWITCHRX.CMD script)
6.  The contents of the j2sdk-image directory of the Windows build of OpenJDK6
    (for parts still missing from the OS/2 port)

Copy LocalEnv.tpl.cmd to LocalEnv.cmd and alter according to your environment
and then use env.cmd to set it up.

Note that you must set the linker type to "VAC308" in gcc452.cmd and make sure
that you have ILINK.EXE somewhere in PATH (by default, gcc452.cmd is set to
"WLINK" but the latest HLL-enabled version of it is bogus: it creates wrong
internal fixups when building the release version of AWT.DLL). Note that the
original ILINK from VAC308 is bogus too (will crash when linking a debug version
of JVM.DLL) so it should not be used. Note that ILINK 5.0 is also bogus (it
fails if there is too much external symbols to export) but Java doesn't hit this
limit so it's the best choice so far.

It is recommended to download ftp://ftp.netlabs.org/pub/qt4/tools/se12.zip to
have env.cmd called automatically whenever you enter "se something" in any
directory inside the project root.

See http://svn.netlabs.org/java for more details.

